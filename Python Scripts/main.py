from lineup import solve_lineup, find_best_str, find_best_items, find_best_enchantments, rank_sort, solve_dungeon
from json_to_python import make_lists


# This was made using the results from create_all_items_keys
# We take the best of every result and store them here for enchant use
# Enchants where processed and added as notes below
best_equips_normal = {
    "1": [[189, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [190, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [189, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [188, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [183, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [182, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [178, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [175, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [172, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [171, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
    "5": [[100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
          [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
    "10": [[100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
    "15": [[100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
    "20": [[100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
    "25": [[100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
    "30": [[100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
    "35": [[100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
    "40": [[100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
    "45": [[100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
    "50": [[100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0],
           [100, 0, 0, 0, 200, 0, 0, 0, 300, 0, 0, 0]],
}
# Same as above but focused on str
# Updated to V63
best_equips_strength = {
    "1": [188, 230, 230, 230, 226, 230, 230, 230, 322, 67, 68, 807],
    "5": [188, 230, 230, 230, 226, 230, 230, 230, 322, 67, 68, 807],
    "10": [188, 230, 230, 230, 226, 230, 230, 230, 322, 67, 68, 807],
    "15": [188, 230, 230, 230, 226, 230, 230, 230, 322, 67, 68, 807],
    "20": [188, 230, 230, 230, 226, 230, 230, 230, 322, 67, 68, 807],
    "25": [188, 230, 230, 230, 226, 230, 230, 230, 322, 67, 68, 807],
    "30": [188, 630, 630, 630, 226, 630, 630, 630, 322, 67, 68, 807],
    "35": [188, 630, 630, 630, 226, 630, 630, 630, 322, 67, 68, 807],
    "40": [188, 630, 630, 630, 226, 630, 630, 630, 322, 67, 68, 807],
    "45": [188, 630, 630, 630, 226, 630, 630, 630, 322, 67, 68, 807],
    "50": [188, 630, 630, 630, 226, 630, 630, 630, 322, 67, 68, 807]
}


# TODO - OUTDATED
#  Equip Sets
#  171: 220, 220, 220 | 244: 320, 320, 320 | 303: 120, 120, 120
#  182: 220, 220, 320 | ^^^^^^^^^^^^^^^^^^ | 323: 120, 120, 120
#  182: 220, 220, 220 | ^^^^^^^^^^^^^^^^^^ | 323: 220, 120, 120
#  182: 615, 615, 615 | 244: 715, 715, 715 | 323: 615, 515, 515
#  175: 615, 615, 615 | 246: 715, 715, 715 | ^^^^^^^^^^^^^^^^^^

# TODO - OUTDATED
#  ID ______________________ Name: [LVL] Items
#  01 _______________Grassy Knoll: [02] W1, A1, R1
#  02 _______________ Lost Forest: [07] W1, A1, R1
#  03 _________________ Deep Cave: [14] W2, A1, R2
#  04 ____________ Twilight House: [14] W2, A1, R2
#  05 ____________ Secret Passage: [21] W2, A1, R3
#  06 ____ Old Battlefield of Fog: [04] W1, A1, R1
#  07 ____ Giant Tower of Justice: [42] W4, A2, R4
#  08 _____ Door to Another World: [01] W1, A1, R1
#  09 __________ Dimensional Rift: [29] W3, A1, R3
#  10 The Magic Castle of the End: [44] W4, A2, R4
#  99 ____________ Thousand Hands: [50] W5, A3, R4


def run_custom_setups():
    setups = [
        [171, 130, 230, 230, 244, 230, 230, 330, 303, 330, 66, 806],
        [171, 130, 230, 230, 244, 230, 230, 330, 303, 330, 330, 66],
        [171, 130, 130, 230, 244, 230, 230, 230, 303, 330, 330, 806],
        [171, 130, 130, 130, 244, 230, 230, 230, 303, 230, 66, 67],
        [171, 130, 130, 230, 244, 230, 230, 230, 303, 330, 330, 330],
        [171, 130, 130, 230, 244, 230, 230, 230, 303, 330, 67, 806],
        [171, 130, 230, 230, 244, 230, 230, 330, 303, 330, 330, 330],
        [171, 130, 230, 230, 244, 230, 230, 330, 303, 330, 330, 806],
        [171, 130, 230, 230, 244, 230, 230, 230, 303, 230, 66, 67],
        [171, 130, 130, 130, 244, 230, 230, 230, 303, 230, 230, 67],
        [171, 130, 230, 230, 244, 230, 230, 230, 303, 330, 330, 67],
        [171, 130, 130, 130, 244, 230, 230, 230, 303, 230, 330, 67],
        [171, 130, 130, 230, 244, 230, 230, 230, 303, 230, 330, 67],
        [171, 130, 230, 230, 244, 230, 230, 330, 303, 330, 66, 67],
        [171, 130, 230, 230, 244, 230, 230, 330, 303, 330, 67, 806],
        [171, 130, 230, 230, 244, 230, 230, 230, 303, 330, 66, 67],
        [171, 130, 230, 230, 244, 230, 230, 330, 303, 330, 330, 67],
        [171, 130, 130, 230, 244, 230, 230, 230, 303, 330, 66, 67],
        [171, 130, 130, 230, 244, 230, 230, 230, 303, 330, 330, 67],
        [171, 130, 130, 230, 244, 230, 230, 230, 303, 230, 66, 67]
    ]
    levels = [max(1, i * 5) for i in range(11)]
    file = "Custom"
    do_enchants = False
    enchant_str = False
    ignore_speed = False
    print_stuff = True

    solve_lineup(setups, levels, file, rank_sort, do_enchants=do_enchants, enchant_str=enchant_str, ignore_speed=ignore_speed, print_stuff=print_stuff)


def main(custom: bool, strength: bool, combination: bool, enchantment: bool, dungeon: bool) -> None:
    if custom:
        run_custom_setups()
    if strength:
        find_best_str(True)
    if combination:
        find_best_items(True)
    if enchantment:
        find_best_enchantments(best_equips_normal, True)
    if dungeon:
        dungeon_id = 1
        end_floor = 0
        do_enchants = False
        enchant_str = False
        print_stuff = True
        solve_dungeon(best_equips_normal['1'], f"Dungeon {dungeon_id}", dungeon_id, end_floor=end_floor, do_enchants=do_enchants, enchant_str=enchant_str, print_stuff=print_stuff)
    print("Done")


if __name__ == '__main__':
    make_lists()
    main(False, False, True, False, False)
